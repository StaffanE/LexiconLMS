@using GridMvc.Html;
@model IEnumerable<LexiconLMS.Models.Group>
@using System;


@{
    ViewBag.Title = "Grupper";
    ViewBag.OddOrEven = 0;
}

<div class="container-fluid topMarg">
    <div class="col-sm-12">
        <div>
            <h2>@ViewBag.Title </h2>
        </div>
        <p>
            @if (User.IsInRole("Teacher")) {
                <span>
                    <a href="@Url.Action("Create")" class="btn btn-success btn-sm">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        Lägg till
                    </a>
                </span>

            }
        </p>
        @*<table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                    {
                        //If The text in description is to long then shorten it down and display the first dispLength(at this moment 35) characters.
                        //For more detailed description go to Detail/Edit/Delete-Views
                        int dispLength = 35;
                        string dispDescription = "";
                        if (!String.IsNullOrEmpty(item.Description)) {
                            if (item.Description.Length < dispLength) { dispLength = item.Description.Length; };
                                dispDescription = item.Description.Substring(0, dispLength);
                        }
                    <tr style=@ExtensionMethods.trColorGrayWhite(ViewBag.OddOrEven)>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @dispDescription
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td>
                            @ExtensionMethods.PeriodStatus(item.StartDate, item.EndDate)
                        </td>
                        <td>
                            @if (User.IsInRole("Teacher"))
                                {
                                <span>
                                    <a href="@Url.Action("Edit", "Groups", new { id = item.Id })" class="btn btn-warning btn-sm">
                                        <span class="glyphicon glyphicon-edit"></span>
                                        Redigera
                                    </a>
                                </span>
                                }
                                <span>
                                    <a href="@Url.Action("Details", "Groups", new { id = item.Id })" class=" btn btn-primary btn-sm">
                                        <span class="glyphicon glyphicon-exclamation-sign"></span>
                                        Detaljer
                                    </a>
                                </span>
                                @if (User.IsInRole("Teacher"))
                                    {
                                    <span>
                                        <a href="@Url.Action("Delete","Groups", new { id = item.Id })" class="btn btn-danger btn-sm">
                                            <span class="glyphicon glyphicon-minus-sign"></span>
                                            Ta bort
                                        </a>
                                    </span>
                                    }
                                </td>
                            </tr>
                                    ViewBag.OddOrEven = ViewBag.OddOrEven + 1;
                    }

            </table>*@
        @Html.Grid(Model).Columns(columns => {

       /* Adding "OrderID" column: */
       columns.Add(model => model.Name)
           .Sortable(true)
       .Titled("Namn")
       .SetWidth(20);

       columns.Add(model => (model.Description))
           .Sortable(true)
       .Titled("Beskrivning")
       .SetWidth(30)
       .RenderValueAs(
       (model => model.Description.Substring(0, Math.Min(model.Description.Length, 30))));

       columns.Add(model => model.StartDate)
       .Titled("Starttdatum")
       .Format("{0:yyyy-MM-dd}")
        .Sortable(true)
         .SetWidth(12)
       .ThenSortByDescending(model => model.StartDate);
       /*         .SortInitialDirection(GridSortDirection.Descending);
               .SetFilterWidgetType("DateTimeFilterWidget"); */

       columns.Add(model => model.EndDate)
           .Sortable(true)
       .Titled("Slutdatum")
       .Format("{0:yyyy-MM-dd}")
                 .SetWidth(12)
       .ThenSortByDescending(model => model.EndDate);
       /* Adding not mapped column, that renders body, using inline Razor html helper */
       columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(12)
               .RenderValueAs(
            @<a href="@Url.Action("Edit", "Groups", new { id = item.Id })" class="btn btn-warning btn-sm">
                <span class="glyphicon glyphicon-edit"></span>
                Redigera
            </a>);
       columns.Add()
              .Encoded(false)
              .Sanitized(false)
              .SetWidth(12)
              .RenderValueAs(
            @<a href="@Url.Action("Details", "Groups", new { id = item.Id })" class=" btn btn-primary btn-sm">
                <span class="glyphicon glyphicon-exclamation-sign"></span>
                Detaljer
            </a>);
       columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(12)
            .RenderValueAs(
            @<a href="@Url.Action("Delete","Groups", new { id = item.Id })" class="btn btn-danger btn-sm">
                <span class="glyphicon glyphicon-minus-sign"></span>
                Ta bort
            </a>);
            }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()

        @*/* Adding "Vip customer" column: */
            /*columns.Add(o => o.Customer.IsVip)
            .Titled("Vip customer")
            .SetWidth(150)
            .ThenSortByDescending(o => o.OrderID)
            .RenderValueAs(o => CustomRenderingOfColumn(o));*/*@


        @*/*        }).SetRowCssClasses(item => item.Customer.IsVip ? "warning" : string.Empty).WithPaging(15).Sortable().Filterable().WithMultipleFilters()*/*@
    </div>
</div>
<div class="container botMarg">
    <div class="col-sm-12">
        <p>
        </p>
    </div>
</div>
