@model IEnumerable<LexiconLMS.Models.Group>

@{
    ViewBag.Title = "Grupper";
    ViewBag.OddOrEven = 0;
}

<h2>Alla grupper</h2>

<p>
@if (User.IsInRole("Teacher"))
{
    <span>
        <a href="@Url.Action("Create")" class="btn btn-success btn-sm">
            <span class="glyphicon glyphicon-plus-sign"></span>
            Lägg upp ny grupp
        </a>
    </span>
    @*@Html.ActionLink("Lägg upp ny grupp", "Create")*@
}
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            Status
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    //If The text in description is to long then shorten it down and display the first dispLength(at this moment 35) characters.
    //For more detailed description go to Detail/Edit/Delete-Views
    int dispLength = 35;
    if (item.Description.Length < dispLength) { dispLength = item.Description.Length;};
    string dispDescription = item.Description.Substring(0, dispLength);
    <tr style=@ExtensionMethods.trColorGrayWhite(ViewBag.OddOrEven)>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @dispDescription
            @*@Html.DisplayFor(modelItem => item.Description)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        <td>
            @ExtensionMethods.PeriodStatus(item.StartDate,item.EndDate)
        </td>
        <td>
            @if (User.IsInRole("Teacher")) {
                <span>
                    <a href="@Url.Action("Edit", "Groups", new { id = item.Id })" class="btn btn-warning btn-sm">
                        <span class="glyphicon glyphicon-edit"></span>
                        Redigera grupp
                    </a>
                </span>
            }
            @*@Url.Action("Edit", "Group", new { id = item.Id })*@
            @*@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |*@
            <span>
                <a href="@Url.Action("Details", "Groups", new { id = item.Id })" class=" btn btn-primary btn-sm">
                    <span class="glyphicon glyphicon-exclamation-sign"></span>
                    Detaljer om grupp
                </a>
            </span>
            @*@Html.ActionLink("Details", "Details", new { id = item.Id }) |*@
            @if (User.IsInRole("Teacher")) {
                <span>
                    <a href="@Url.Action("Delete","Groups", new { id = item.Id })" class="btn btn-danger btn-sm">
                        <span class="glyphicon glyphicon-minus-sign"></span>
                        Ta bort grupp
                    </a>
                </span>
            }
            @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
        </td>
    </tr>
    ViewBag.OddOrEven = ViewBag.OddOrEven + 1;
}

</table>
