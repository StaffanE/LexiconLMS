@model IEnumerable<LexiconLMS.Models.Activities>
@using GridMvc.Html;
@using LexiconLMS;
@{
    ViewBag.Title = "Alla aktiviteter";
    ViewBag.GoBackToView = "../Activities/Index";
    ViewBag.OddOrEven = 0;
}

<div class="container-fluid topMarg">
    <div class="col-sm-12">
        <div class="col-sm-6">
            <div>
                <h2>@ViewBag.Title </h2>
            </div>
            @if (User.IsInRole("Teacher"))
            {
                <p>
                    <span>
                        <a href="@Url.Action("Create")" class="btn btn-success btn-xm">
                            <span class="glyphicon glyphicon-plus-sign"></span>
                            Skapa ny
                        </a>
                    </span>
                </p>
            }
            <h4>Aktiviteter</h4>
            @*<table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivityType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Deadline)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    string visibleText = ExtensionMethods.trColorGrayWhite(ViewBag.OddOrEven);
                    string GoToUrl = "../Activities/Details";
                    string GoToUrlForId = @GoToUrl + "/" + item.Id;

                    <tr style=@ExtensionMethods.trColorGrayWhite(ViewBag.OddOrEven) onclick="this.children[0].children[0].click();">
                        <td>
                            @Html.ActionLink((item.Course.Name), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })
                        </td>
                        <td>
                            @Html.ActionLink((@ExtensionMethods.DisplayFor(item.ActivityType)), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })
                        </td>
                        <td>
                            @Html.ActionLink((item.Name), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })
                        </td>
                        <td>
                            @Html.ActionLink((item.Description), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })
                        </td>
                        <td>
                            @Html.ActionLink(item.StartTime.ToString("yyyy-MM-dd"), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })
                        </td>
                        <td>
                            @Html.ActionLink(item.EndTime.ToString("yyyy-MM-dd"), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Deadline)
                        </td>
                        <td>

                        <td>
                            @if (User.IsInRole("Teacher"))
                            {
                                <span>
                                    <a href="@Url.Action("Edit", "Activities", new { id = item.Id })" class="btn btn-warning btn-sm">
                                        <span class="glyphicon glyphicon-edit"></span>
                                        Redigera
                                    </a>
                                </span>
                            }
                        </td>
                        <td>
                            <span>
                                <a href="@Url.Action("Details", "Activities", new { id = item.Id })" class=" btn btn-primary btn-sm">
                                    <span class="glyphicon glyphicon-exclamation-sign"></span>
                                    Detaljer
                                </a>
                            </span>
                        </td>

                        <td>
                            @if (User.IsInRole("Teacher"))
                            {
                                <span>
                                    <a href="@Url.Action("Delete","Activities", new { id = item.Id })" class="btn btn-danger btn-sm">
                                        <span class="glyphicon glyphicon-minus-sign"></span>
                                        Ta bort
                                    </a>
                                </span>
                            }
                        </td>
                    </tr>
                            ViewBag.OddOrEven = ViewBag.OddOrEven + 1;
                }
            </table>*@
             	
            @Html.Grid(Model).Columns(columns =>
         {
             columns.Add(model => model.Course.Name)
                         .Sortable(true)
                     .Titled("Kurs")
                     .SetWidth(20)
                     .ToString();

             columns.Add(model => model.ActivityType)
                         .Sortable(true)
                     .Titled("Aktivitetstyp")
                     .SetWidth(20)
                     .ToString();

             columns.Add(model => model.Name)
            .Sortable(true)
        .Titled("Aktivitet")
                 //.RenderValueAs(model => model.Name == null ? " " : model.Name)
        .SetWidth(20);

             columns.Add(model => model.Description)
                         .Sortable(true)
                     .Titled("Beskrivning")
                     .SetWidth(30)
                     .RenderValueAs(
                     (model => model.Description.Substring(0, Math.Min(model.Description.Length, 30))));
           
             columns.Add(model => model.StartTime)
             .Titled("Startdatum/tid")
             .Format("{0:yyyy-MM-dd}")
              .Sortable(true)
               .SetWidth(20)
             .ThenSortByDescending(model => model.StartTime);

             columns.Add(model => model.EndTime)
             .Titled("Startdatum/tid")
             .Format("{0:yyyy-MM-dd}")
              .Sortable(true)
               .SetWidth(20)
             .ThenSortByDescending(model => model.EndTime);
             
             columns.Add(model => model.Deadline)
                  .Sortable(true)
                  .Titled("Inlämningsuppgift")
                   .SetWidth(12)
                   .RenderValueAs(model => model.Deadline == true ? "Ja" : "")
                  .ThenSortByDescending(model => model.Deadline)
             ;
             /* Adding not mapped column, that renders body, using inline Razor html helper */
             columns.Add()
                     .Encoded(false)
                     .Sanitized(false)
                     .SetWidth(12)
                     .RenderValueAs(
                    @<a href="@Url.Action("Edit", "Activities", new { id = item.Id })" class="btn btn-warning btn-sm">
                        <span class="glyphicon glyphicon-edit"></span>
                        Redigera
                    </a>);
             columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(12)
                    .RenderValueAs(
                    @<a href="@Url.Action("Details", "Activities", new { id = item.Id })" class=" btn btn-primary btn-sm">
                        <span class="glyphicon glyphicon-exclamation-sign"></span>
                        Detaljer
                    </a>);
             columns.Add()
                  .Encoded(false)
                  .Sanitized(false)
                  .SetWidth(12)
                  .RenderValueAs(
                @<a href="@Url.Action("Delete", "Activities", new { id = item.Id })" class="btn btn-danger btn-sm">
                    <span class="glyphicon glyphicon-minus-sign"></span>
                    Ta bort
                </a>);
         }).WithPaging(10).Sortable().Filterable().WithMultipleFilters();
            <div class="col-sm-6">
            </div>
        </div>
    </div>
    <div class="container botMarg">
        <div class="col-sm-12">
            <p>
            </p>
        </div>
    </div>
