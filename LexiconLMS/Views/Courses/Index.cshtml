@model IEnumerable<LexiconLMS.Models.Course>
@using GridMvc.Html;
@using GridMvc.Sorting;
@using System.Web.Helpers;

@{
    ViewBag.Title = "Alla kurser";
    ViewBag.OddOrEven = 0;
}

<h2>@ViewBag.Title</h2>

<p>
    @if (User.IsInRole("Teacher")) {
        <span>
            <a href="@Url.Action("Create")" class="btn btn-success btn-xs">
                <span class="glyphicon glyphicon-plus-sign"></span>
                Lägg upp
            </a>
        </span>
    }
</p>
@Html.Grid(Model).Columns(columns =>{

       /* Adding "Groupname" column: */
        columns.Add(model => model.Group.Name)
            .Sortable(true)
            .Titled("Grupp")
            .SetWidth(20);

        /* Adding "OrderID" column: */
        columns.Add(model => model.Name)
            .Sortable(true)
            .Titled("Kurs")
            .SetWidth(20);

        /* Adding "Description" column: */
        columns.Add(model => model.Description)
            .Encoded(true)
            .Sanitized(false)
            .SetWidth(12)
        ;

        /* Adding "StartDate" column: */
        columns.Add(model => model.StartDate)
            .Titled("Starttdatum")
            .Format("{0:yyyy-MM-dd}")
            .Sortable(true)
            .SetWidth(12)
            .SortInitialDirection(GridSortDirection.Descending);

        columns.Add(model => model.EndDate)
            .Sortable(true)
            .Titled("Slutdatum")
            .Format("{0:yyyy-MM-dd}")
            .SetWidth(12)
            .ThenSortByDescending(model => model.EndDate)
            ;
    /* Adding not mapped column, that renders body, using inline Razor html helper */
    columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(12)
            .RenderValueAs(
            @<a href="@Url.Action("Edit", "Courses", new { id = item.Id })" class="btn btn-warning btn-xs">
                <span class="glyphicon glyphicon-edit"></span>
                Redigera
            </a>);
     columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(12)
            .RenderValueAs(
            @<a href="@Url.Action("Details", "Courses", new { id = item.Id })" class=" btn btn-primary btn-xs">
                <span class="glyphicon glyphicon-exclamation-sign"></span>
                Detaljer
            </a>);
                    columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .SetWidth(12)
            .RenderValueAs(
            @<a href="@Url.Action("Delete", "Courses", new { id = item.Id })" class="btn btn-danger btn-xs">
                <span class="glyphicon glyphicon-minus-sign"></span>
                Ta bort
            </a>);
        }).WithPaging(5).Sortable().Filterable().WithMultipleFilters();

<div class="container botMarg">
    <div class="col-sm-12">
        <p>
        </p>
    </div>
</div>