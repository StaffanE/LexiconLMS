@model IEnumerable<LexiconLMS.Models.Course>
@using GridMvc.Html;
@using LexiconLMS;
@{
    ViewBag.Title = "Index";
}

<h2>Kurser index</h2>
<p>
    @if (User.IsInRole("Teacher")) {@Html.ActionLink("Create New", "Create")}
</p>
<h4>Kurser</h4>
<table class="table">
    <tr>
        
            @if (Request.IsAuthenticated)
            {
                if (User.IsInRole("Teacher"))
                {
                    <th>
                        @*@Html.DisplayNameFor(model => model.Group.Name)                        @*rubrikerna*@

                        @Html.ActionLink("Gruppnamn", "Index", new { sortOrder = ViewBag.GroupSortParm }, new { @class = "my-class1" })
                        @if (ViewBag.sortOrder == "group_desc")
                        {
                            <i class="glyphicon glyphicon-sort-by-alphabet-alt"></i>
                        }
                        else if (ViewBag.sortOrder == "group")
                        {
                            <i class="glyphicon glyphicon-sort-by-alphabet"></i>
                        }
                    </th>
                }
            }
        <th>
            @*@Html.DisplayNameFor(model => model.Name)*@
            @Html.ActionLink("Kurs", "Index", new { sortOrder = ViewBag.CourseSortParm }, new { @class = "my-class1" })
            @if (ViewBag.sortOrder == "course_desc")
            {
                <i class="glyphicon glyphicon-sort-by-alphabet-alt"></i>
            }
            else if (ViewBag.sortOrder == "course")
            {
                <i class="glyphicon glyphicon-sort-by-alphabet"></i>
            }
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
           @* @Html.DisplayNameFor(model => model.StartDate)*@
            @Html.ActionLink("Startdatum", "Index", new { sortOrder = ViewBag.StartDateSortParm }, new { @class = "my-class1" })
            @if (ViewBag.sortOrder == "date_desc")
            {
                <i class="glyphicon glyphicon-sort-by-alphabet-alt"></i>
            }
            else if (ViewBag.sortOrder == "date")
            {
                <i class="glyphicon glyphicon-sort-by-alphabet"></i>
            }
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.EndDate)*@
            @Html.ActionLink("Slutdatum", "Index", new { sortOrder = ViewBag.EndDateSortParm }, new { @class = "my-class1" })
            @if (ViewBag.sortOrder == "end_date_desc")
            {
                <i class="glyphicon glyphicon-sort-by-alphabet-alt"></i>
            }
            else if (ViewBag.sortOrder == "end_date")
            {
                <i class="glyphicon glyphicon-sort-by-alphabet"></i>
            }
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model) 
    {
        @*var visibleText = ExtensionMethods.trTextColor(item.StartDate, item.EndDate);
        string GoToUrl = "../Activities/Details";
        string GoToUrlForId = @GoToUrl+"/"+item.Id;				
         
     <tr style=@ExtensionMethods.trColor(item.StartDate, item.EndDate) onclick="this.children[0].children[0].click();">
        <td>
            @Html.ActionLink((item.Group.Name), @GoToUrl, new { id = item.Id }, new { @class = @visibleText })   
        </td>*@

    <tr>
        @if (Request.IsAuthenticated)
            {
                if (User.IsInRole("Teacher"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Group.Name)
                    </td>
                }
            }  
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>          
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        
        <td>
            @if (User.IsInRole("Teacher"))
            {@Html.ActionLink("Redigera", "Edit", new { id = item.Id })} |
            @Html.ActionLink("Detaljer", "Details", new { id = item.Id }) |
            @if (User.IsInRole("Teacher"))
            {@Html.ActionLink("Ta bort", "Delete", new { id = item.Id })}
        </td>
    </tr>
    }

</table>
